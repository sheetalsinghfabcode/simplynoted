{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).account.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).account.jsx\");\n  import.meta.hot.lastModified = \"1696596785651.3594\";\n}\n// REMIX HMR END\n\nimport { Await, Form, Outlet, useLoaderData, useMatches, useOutlet } from '@remix-run/react';\nimport { Suspense } from 'react';\nimport { json, defer, redirect } from '@shopify/remix-oxygen';\nimport { flattenConnection } from '@shopify/hydrogen';\nimport { Button, OrderCard, PageHeader, Text, AccountDetails, AccountAddressBook, Modal, ProductSwimlane } from '~/components';\nimport { FeaturedCollections } from '~/components/FeaturedCollections';\nimport { usePrefixPathWithLocale } from '~/lib/utils';\nimport { CACHE_NONE, routeHeaders } from '~/data/cache';\nimport { ORDER_CARD_FRAGMENT } from '~/components/OrderCard';\nimport { getFeaturedData } from './($locale).featured-products';\nimport { doLogout } from './($locale).account.logout';\nexport const headers = routeHeaders;\nexport async function loader({\n  request,\n  context,\n  params\n}) {\n  const {\n    pathname\n  } = new URL(request.url);\n  const locale = params.locale;\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  const isAuthenticated = Boolean(customerAccessToken);\n  const loginPath = locale ? `/${locale}/account/login` : '/account/login';\n  const isAccountPage = /^\\/account\\/?$/.test(pathname);\n  if (!isAuthenticated) {\n    if (isAccountPage) {\n      return redirect(loginPath);\n    }\n    // pass through to public routes\n    return json({\n      isAuthenticated: false\n    });\n  }\n  const customer = await getCustomer(context, customerAccessToken);\n  const heading = customer ? customer.result ? `Welcome, ${customer.firstName}.` : `Welcome to your account.` : 'Account Details';\n  return defer({\n    isAuthenticated,\n    customer,\n    heading,\n    featuredData: getFeaturedData(context.storefront)\n  }, {\n    headers: {\n      'Cache-Control': CACHE_NONE\n    }\n  });\n}\nexport default function Authenticated() {\n  _s();\n  const data = useLoaderData();\n  const outlet = useOutlet();\n  const matches = useMatches();\n\n  // routes that export handle { renderInModal: true }\n  const renderOutletInModal = matches.some(match => {\n    return match?.handle?.renderInModal;\n  });\n\n  // Public routes\n  if (!data.isAuthenticated) {\n    return <Outlet />;\n  }\n\n  // Authenticated routes\n  if (outlet) {\n    if (renderOutletInModal) {\n      return <>\r\n          <Modal cancelLink=\"/account\">\r\n            <Outlet context={{\n            customer: data.customer\n          }} />\r\n          </Modal>\r\n          <Account {...data} />\r\n        </>;\n    } else {\n      return <Outlet context={{\n        customer: data.customer\n      }} />;\n    }\n  }\n  return <Account {...data} />;\n}\n_s(Authenticated, \"CLxbH7kNLhQFJHruRoO9MhPPySo=\", false, function () {\n  return [useLoaderData, useOutlet, useMatches];\n});\n_c = Authenticated;\nfunction Account({\n  customer,\n  heading,\n  featuredData\n}) {\n  _s2();\n  const orders = flattenConnection(customer.orders);\n  const addresses = flattenConnection(customer.addresses);\n  console.log('!!!!!!!!!', customer, 'customerData--------------');\n  let result = customer.id.replace(/[^0-9]/g, \"\");\n  if (typeof window !== 'undefined' && customer) {\n    console.log('iiiiiiiiiiiiiiiiiiiiiiii');\n    localStorage.setItem('customerId', result);\n    console.log('ffffffffffffffffffffffff');\n  }\n  const remove = () => {\n    console.log('aaaaaaaaaaaaa');\n    if (typeof window !== 'undefined' && customer) {\n      console.log('bbbbbbbbbbbbbbb');\n      localStorage.removeItem('customerId');\n      console.log('ccccccccccccc');\n    }\n  };\n  return <>\r\n      <PageHeader heading={heading}>\r\n        <Form method=\"post\" action={usePrefixPathWithLocale('/account/logout')}>\r\n          <button type=\"submit\" className=\"text-primary/50\" onClick={() => remove()}>\r\n            Sign out\r\n          </button>\r\n        </Form>\r\n      </PageHeader>\r\n      {orders && <AccountOrderHistory orders={orders} />}\r\n      <AccountDetails customer={customer} />\r\n      <AccountAddressBook addresses={addresses} customer={customer} />\r\n      {!orders.length && <Suspense>\r\n          <Await resolve={featuredData} errorElement=\"There was a problem loading featured products.\">\r\n            {data => <>\r\n                <FeaturedCollections title=\"Popular Collections\" collections={data.featuredCollections} />\r\n                <ProductSwimlane products={data.featuredProducts} />\r\n              </>}\r\n          </Await>\r\n        </Suspense>}\r\n    </>;\n}\n_s2(Account, \"I6Yiq9RW1BACN7PtivA6Wi6Ggkk=\", false, function () {\n  return [usePrefixPathWithLocale];\n});\n_c2 = Account;\nfunction AccountOrderHistory({\n  orders\n}) {\n  return <div className=\"mt-6\">\r\n      <div className=\"grid w-full gap-4 p-4 py-6 md:gap-8 md:p-8 lg:p-12\">\r\n        <h2 className=\"font-bold text-lead\">Order History</h2>\r\n        {orders?.length ? <Orders orders={orders} /> : <EmptyOrders />}\r\n      </div>\r\n    </div>;\n}\n_c3 = AccountOrderHistory;\nfunction EmptyOrders() {\n  _s3();\n  return <div>\r\n      <Text className=\"mb-1\" size=\"fine\" width=\"narrow\" as=\"p\">\r\n        You haven&apos;t placed any orders yet.\r\n      </Text>\r\n      <div className=\"w-48\">\r\n        <Button className=\"w-full mt-2 text-sm\" variant=\"secondary\" to={usePrefixPathWithLocale('/')}>\r\n          Start Shopping\r\n        </Button>\r\n      </div>\r\n    </div>;\n}\n_s3(EmptyOrders, \"I6Yiq9RW1BACN7PtivA6Wi6Ggkk=\", false, function () {\n  return [usePrefixPathWithLocale];\n});\n_c4 = EmptyOrders;\nfunction Orders({\n  orders\n}) {\n  return <ul className=\"grid grid-flow-row grid-cols-1 gap-2 gap-y-6 md:gap-4 lg:gap-6 false sm:grid-cols-3\">\r\n      {orders.map(order => <OrderCard order={order} key={order.id} />)}\r\n    </ul>;\n}\n_c5 = Orders;\nconst CUSTOMER_QUERY = `#graphql\n  query CustomerDetails(\n    $customerAccessToken: String!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customer(customerAccessToken: $customerAccessToken) {\n      ...CustomerDetails\n    }\n  }\n\n  fragment AddressPartial on MailingAddress {\n    id\n    formatted\n    firstName\n    lastName\n    company\n    address1\n    address2\n    country\n    province\n    city\n    zip\n    phone\n  }\n\n  fragment CustomerDetails on Customer {\n    firstName\n    lastName\n    phone\n    email\n    id\n    defaultAddress {\n      ...AddressPartial\n    }\n    addresses(first: 6) {\n      edges {\n        node {\n          ...AddressPartial\n        }\n      }\n    }\n    orders(first: 250, sortKey: PROCESSED_AT, reverse: true) {\n      edges {\n        node {\n          ...OrderCard\n        }\n      }\n    }\n  }\n\n  ${ORDER_CARD_FRAGMENT}\n`;\nexport async function getCustomer(context, customerAccessToken) {\n  const {\n    storefront\n  } = context;\n  const data = await storefront.query(CUSTOMER_QUERY, {\n    variables: {\n      customerAccessToken,\n      country: context.storefront.i18n.country,\n      language: context.storefront.i18n.language\n    },\n    cache: storefront.CacheNone()\n  });\n\n  /**\r\n   * If the customer failed to load, we assume their access token is invalid.\r\n   */\n  if (!data || !data.customer) {\n    throw await doLogout(context);\n  }\n  return data.customer;\n}\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Authenticated\");\n$RefreshReg$(_c2, \"Account\");\n$RefreshReg$(_c3, \"AccountOrderHistory\");\n$RefreshReg$(_c4, \"EmptyOrders\");\n$RefreshReg$(_c5, \"Orders\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
