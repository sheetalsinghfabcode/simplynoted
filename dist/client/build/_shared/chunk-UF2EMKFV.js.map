{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.login.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).account.login.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).account.login.jsx\");\n  import.meta.hot.lastModified = \"1696849699244.4453\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@shopify/remix-oxygen';\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport { getInputStyleClasses } from '~/lib/utils';\nimport { Link } from '~/components';\nexport const handle = {\n  isPublic: true\n};\nexport async function loader({\n  context,\n  params\n}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect(params.locale ? `${params.locale}/account` : '/account');\n  }\n\n  // TODO: Query for this?\n  return json({\n    shopName: 'Hydrogen'\n  });\n}\nconst badRequest = data => json(data, {\n  status: 400\n});\nexport const action = async ({\n  request,\n  context,\n  params\n}) => {\n  const formData = await request.formData();\n  const email = formData.get('email');\n  const password = formData.get('password');\n  if (!email || !password || typeof email !== 'string' || typeof password !== 'string') {\n    return badRequest({\n      formError: 'Please provide both an email and a password.'\n    });\n  }\n  const {\n    session,\n    storefront,\n    cart\n  } = context;\n  try {\n    const customerAccessToken = await doLogin(context, {\n      email,\n      password\n    });\n    session.set('customerAccessToken', customerAccessToken);\n\n    // Sync customerAccessToken with existing cart\n    const result = await cart.updateBuyerIdentity({\n      customerAccessToken\n    });\n\n    // Update cart id in cookie\n    const headers = cart.setCartId(result.cart.id);\n    headers.append('Set-Cookie', await session.commit());\n    return redirect(params.locale ? `/${params.locale}/account` : '/account', {\n      headers\n    });\n  } catch (error) {\n    if (storefront.isApiError(error)) {\n      return badRequest({\n        formError: 'Something went wrong. Please try again later.'\n      });\n    }\n\n    /**\r\n     * The user did something wrong, but the raw error from the API is not super friendly.\r\n     * Let's make one up.\r\n     */\n    return badRequest({\n      formError: 'Sorry. We did not recognize either your email or password. Please try to sign in again or create a new account.'\n    });\n  }\n};\nexport const meta = () => {\n  return [{\n    title: 'Login'\n  }];\n};\nexport default function Login() {\n  _s();\n  const {\n    shopName\n  } = useLoaderData();\n  const actionData = useActionData();\n  const [nativeEmailError, setNativeEmailError] = useState(null);\n  const [nativePasswordError, setNativePasswordError] = useState(null);\n  async function setVar() {\n    if (typeof window !== 'undefined') {\n      console.log('wwwwwwww');\n      localStorage.setItem('resultVar', 'result');\n      console.log('dddddddd');\n    }\n  }\n  return <div className=\"flex justify-center my-24 px-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <h1 className=\"text-4xl\">Sign in.</h1>\r\n        {/* TODO: Add onSubmit to validate _before_ submission with native? */}\r\n        <Form method=\"post\" noValidate className=\"pt-6 pb-8 mt-4 mb-4 space-y-3\">\r\n          {actionData?.formError && <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\r\n              <p className=\"m-4 text-s text-contrast\">{actionData.formError}</p>\r\n            </div>}\r\n          <div>\r\n            <input className={`mb-1 ${getInputStyleClasses(nativeEmailError)}`} id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" required placeholder=\"Email address\" aria-label=\"Email address\"\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus onBlur={event => {\n            setNativeEmailError(event.currentTarget.value.length && !event.currentTarget.validity.valid ? 'Invalid email address' : null);\n          }} />\r\n            {nativeEmailError && <p className=\"text-red-500 text-xs\">{nativeEmailError} &nbsp;</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input className={`mb-1 ${getInputStyleClasses(nativePasswordError)}`} id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" placeholder=\"Password\" aria-label=\"Password\" minLength={8} required\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus onBlur={event => {\n            if (event.currentTarget.validity.valid || !event.currentTarget.value.length) {\n              setNativePasswordError(null);\n            } else {\n              setNativePasswordError(event.currentTarget.validity.valueMissing ? 'Please enter a password' : 'Passwords must be at least 8 characters');\n            }\n          }} />\r\n            {nativePasswordError && <p className=\"text-red-500 text-xs\">\r\n                {' '}\r\n                {nativePasswordError} &nbsp;\r\n              </p>}\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <button onClick={() => setVar()} className=\"bg-primary text-contrast rounded py-2 px-4 focus:shadow-outline block w-full\" type=\"submit\" disabled={!!(nativePasswordError || nativeEmailError)}>\r\n              Sign in\r\n            </button>\r\n          </div>\r\n          <div className=\"flex justify-between items-center mt-8 border-t border-gray-300\">\r\n            <p className=\"align-baseline text-sm mt-6\">\r\n              New to {shopName}? &nbsp;\r\n              <Link className=\"inline underline\" to=\"/account/register\">\r\n                Create an account\r\n              </Link>\r\n            </p>\r\n            <Link className=\"mt-6 inline-block align-baseline text-sm text-primary/50\" to=\"/account/recover\">\r\n              Forgot password\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>;\n}\n_s(Login, \"JLOChZIFTmQtxoUzstEmZlha9U4=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = Login;\nconst LOGIN_MUTATION = `#graphql\n  mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\nexport async function doLogin({\n  storefront\n}, {\n  email,\n  password\n}) {\n  const data = await storefront.mutate(LOGIN_MUTATION, {\n    variables: {\n      input: {\n        email,\n        password\n      }\n    }\n  });\n  if (data?.customerAccessTokenCreate?.customerAccessToken?.accessToken) {\n    return data.customerAccessTokenCreate.customerAccessToken.accessToken;\n  }\n\n  /**\r\n   * Something is wrong with the user's input.\r\n   */\n  throw new Error(data?.customerAccessTokenCreate?.customerUserErrors.join(', '));\n}\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
