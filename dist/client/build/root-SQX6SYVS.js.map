{
  "version": 3,
  "sources": ["../../../app/root.jsx", "../../../app/components/FeaturedSection.jsx", "../../../app/components/GenericError.jsx", "../../../app/components/NotFound.jsx", "../../../app/hooks/useAnalytics.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.jsx\");\n}\n// REMIX HMR END\n\nimport { defer } from '@shopify/remix-oxygen';\nimport { isRouteErrorResponse, Links, Meta, Outlet, Scripts, LiveReload, ScrollRestoration, useLoaderData, useMatches, useRouteError } from '@remix-run/react';\nimport { ShopifySalesChannel, Seo, useNonce } from '@shopify/hydrogen';\nimport invariant from 'tiny-invariant';\nimport { Layout } from '~/components';\nimport { seoPayload } from '~/lib/seo.server';\nimport favicon from '../public/favicon.svg';\nimport { GenericError } from './components/GenericError';\nimport { NotFound } from './components/NotFound';\nimport styles from './styles/app.css';\nimport { DEFAULT_LOCALE, parseMenu } from './lib/utils';\nimport { useAnalytics } from './hooks/useAnalytics';\n\n// This is important to avoid re-fetching root queries on sub-navigations\nexport const shouldRevalidate = ({\n  formMethod,\n  currentUrl,\n  nextUrl\n}) => {\n  // revalidate when a mutation is performed e.g add to cart, login...\n  if (formMethod && formMethod !== 'GET') {\n    return true;\n  }\n\n  // revalidate when manually revalidating via useRevalidator\n  if (currentUrl.toString() === nextUrl.toString()) {\n    return true;\n  }\n  return false;\n};\nexport const links = () => {\n  return [{\n    rel: 'stylesheet',\n    href: styles\n  }, {\n    rel: 'preconnect',\n    href: 'https://cdn.shopify.com'\n  }, {\n    rel: 'preconnect',\n    href: 'https://shop.app'\n  }, {\n    rel: 'icon',\n    type: 'image/svg+xml',\n    href: favicon\n  }];\n};\nexport async function loader({\n  request,\n  context\n}) {\n  const {\n    session,\n    storefront,\n    cart\n  } = context;\n  const [customerAccessToken, layout] = await Promise.all([session.get('customerAccessToken'), getLayoutData(context)]);\n  const seo = seoPayload.root({\n    shop: layout.shop,\n    url: request.url\n  });\n  return defer({\n    isLoggedIn: Boolean(customerAccessToken),\n    layout,\n    selectedLocale: storefront.i18n,\n    cart: cart.get(),\n    analytics: {\n      shopifySalesChannel: ShopifySalesChannel.hydrogen,\n      shopId: layout.shop.id\n    },\n    seo\n  });\n}\nexport default function App() {\n  _s();\n  const nonce = useNonce();\n  const data = useLoaderData();\n  const locale = data.selectedLocale ?? DEFAULT_LOCALE;\n  const hasUserConsent = true;\n  useAnalytics(hasUserConsent);\n  return <html lang={locale.language}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Seo />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Layout key={`${locale.language}-${locale.country}`} layout={data.layout}>\n          \r\n          <Outlet />\r\n        </Layout>\r\n        <ScrollRestoration nonce={nonce} />\r\n        <Scripts nonce={nonce} />\r\n        <LiveReload nonce={nonce} />\r\n      </body>\r\n    </html>;\n}\n_s(App, \"wS1IxwTQNgLnN1UNzhV0XTDQjOc=\", false, function () {\n  return [useNonce, useLoaderData, useAnalytics];\n});\n_c = App;\nexport function ErrorBoundary({\n  error\n}) {\n  _s2();\n  const nonce = useNonce();\n  const [root] = useMatches();\n  const locale = root?.data?.selectedLocale ?? DEFAULT_LOCALE;\n  const routeError = useRouteError();\n  const isRouteError = isRouteErrorResponse(routeError);\n  let title = 'Error';\n  let pageType = 'page';\n  if (isRouteError) {\n    title = 'Not found';\n    if (routeError.status === 404) pageType = routeError.data || pageType;\n  }\n  return <html lang={locale.language}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <title>{title}</title>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Layout layout={root?.data?.layout} key={`${locale.language}-${locale.country}`}>\n          \r\n          {isRouteError ? <>\r\n              {routeError.status === 404 ? <NotFound type={pageType} /> : <GenericError error={{\n            message: `${routeError.status} ${routeError.data}`\n          }} />}\n\n            \r\n            </> : <GenericError error={error instanceof Error ? error : undefined} />}\n          \r\n        </Layout>\r\n        <ScrollRestoration nonce={nonce} />\r\n        <Scripts nonce={nonce} />\r\n        <LiveReload nonce={nonce} />\r\n      </body>\r\n    </html>;\n}\n_s2(ErrorBoundary, \"xrEn7bLATczkYrVOIbZIyYDMLG4=\", false, function () {\n  return [useNonce, useMatches, useRouteError];\n});\n_c2 = ErrorBoundary;\nconst LAYOUT_QUERY = `#graphql\n  query layout(\n    $language: LanguageCode\n    $headerMenuHandle: String!\n    $footerMenuHandle: String!\n  ) @inContext(language: $language) {\n    shop {\n      ...Shop\n    }\n    headerMenu: menu(handle: $headerMenuHandle) {\n      ...Menu\n    }\n    footerMenu: menu(handle: $footerMenuHandle) {\n      ...Menu\n    }\n  }\n  fragment Shop on Shop {\n    id\n    name\n    description\n    primaryDomain {\n      url\n    }\n    brand {\n      logo {\n        image {\n          url\n        }\n      }\n    }\n  }\n  fragment MenuItem on MenuItem {\n    id\n    resourceId\n    tags\n    title\n    type\n    url\n  }\n  fragment ChildMenuItem on MenuItem {\n    ...MenuItem\n  }\n  fragment ParentMenuItem on MenuItem {\n    ...MenuItem\n    items {\n      ...ChildMenuItem\n    }\n  }\n  fragment Menu on Menu {\n    id\n    items {\n      ...ParentMenuItem\n    }\n  }\n`;\nasync function getLayoutData({\n  storefront,\n  env\n}) {\n  const data = await storefront.query(LAYOUT_QUERY, {\n    variables: {\n      headerMenuHandle: 'main-menu',\n      footerMenuHandle: 'footer',\n      language: storefront.i18n.language\n    }\n  });\n  invariant(data, 'No data returned from Shopify API');\n\n  /*\r\n        Modify specific links/routes (optional)\r\n        @see: https://shopify.dev/api/storefront/unstable/enums/MenuItemType\r\n        e.g here we map:\r\n          - /blogs/news -> /news\r\n          - /blog/news/blog-post -> /news/blog-post\r\n          - /collections/all -> /products\r\n      */\n  const customPrefixes = {\n    BLOG: '',\n    CATALOG: 'products'\n  };\n  const headerMenu = data?.headerMenu ? parseMenu(data.headerMenu, data.shop.primaryDomain.url, env, customPrefixes) : undefined;\n  const footerMenu = data?.footerMenu ? parseMenu(data.footerMenu, data.shop.primaryDomain.url, env, customPrefixes) : undefined;\n  return {\n    shop: data.shop,\n    headerMenu,\n    footerMenu\n  };\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\FeaturedSection.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\FeaturedSection.jsx\");\n  import.meta.hot.lastModified = \"1696490276839.9326\";\n}\n// REMIX HMR END\n\nimport { useEffect } from 'react';\nimport { useFetcher } from '@remix-run/react';\nimport { usePrefixPathWithLocale } from '~/lib/utils';\nimport { FeaturedCollections } from './FeaturedCollections';\nimport { ProductSwimlane } from './ProductSwimlane';\nexport function FeaturedSection() {\n  _s();\n  const {\n    load,\n    data\n  } = useFetcher();\n  const path = usePrefixPathWithLocale('/featured-products');\n  useEffect(() => {\n    load(path);\n  }, [load, path]);\n  if (!data) return null;\n  const {\n    featuredCollections,\n    featuredProducts\n  } = data;\n  return <>\r\n      {featuredCollections.nodes.length < 2 && <FeaturedCollections title=\"Popular Collections\" collections={featuredCollections} />}\r\n      <ProductSwimlane products={featuredProducts} />\r\n    </>;\n}\n_s(FeaturedSection, \"Uq/AUQPwojgUB+7GWZixmHAQfXI=\", false, function () {\n  return [useFetcher, usePrefixPathWithLocale];\n});\n_c = FeaturedSection;\nvar _c;\n$RefreshReg$(_c, \"FeaturedSection\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\GenericError.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\GenericError.jsx\");\n  import.meta.hot.lastModified = \"1696490276839.9326\";\n}\n// REMIX HMR END\n\nimport { Button } from './Button';\nimport { FeaturedSection } from './FeaturedSection';\nimport { PageHeader, Text } from './Text';\nexport function GenericError({\n  error\n}) {\n  const heading = `Something\u2019s wrong here.`;\n  let description = `We found an error while loading this page.`;\n\n  // TODO hide error in prod?\n  if (error) {\n    description += `\\n${error.message}`;\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n  return <>\r\n      <PageHeader heading={heading}>\r\n        <Text width=\"narrow\" as=\"p\">\r\n          {description}\r\n        </Text>\r\n        {error?.stack && <pre style={{\n        padding: '2rem',\n        background: 'hsla(10, 50%, 50%, 0.1)',\n        color: 'red',\n        overflow: 'auto',\n        maxWidth: '100%'\n      }} dangerouslySetInnerHTML={{\n        __html: addLinksToStackTrace(error.stack)\n      }} />}\r\n        <Button width=\"auto\" variant=\"secondary\" to={'/'}>\r\n          Take me to the home page\r\n        </Button>\r\n      </PageHeader>\r\n      <FeaturedSection />\r\n    </>;\n}\n_c = GenericError;\nfunction addLinksToStackTrace(stackTrace) {\n  return stackTrace?.replace(/^\\s*at\\s?.*?[(\\s]((\\/|\\w\\:).+)\\)\\n/gim, (all, m1) => all.replace(m1, `<a href=\"vscode://file${m1}\" class=\"hover:underline\">${m1}</a>`));\n}\nvar _c;\n$RefreshReg$(_c, \"GenericError\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\NotFound.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\NotFound.jsx\");\n  import.meta.hot.lastModified = \"1696490276853.8694\";\n}\n// REMIX HMR END\n\nimport { Button } from './Button';\nimport { FeaturedSection } from './FeaturedSection';\nimport { PageHeader, Text } from './Text';\nexport function NotFound({\n  type = 'page'\n}) {\n  const heading = `We\u2019ve lost this ${type}`;\n  const description = `We couldn\u2019t find the ${type} you\u2019re looking for. Try checking the URL or heading back to the home page.`;\n  return <>\r\n      <PageHeader heading={heading}>\r\n        <Text width=\"narrow\" as=\"p\">\r\n          {description}\r\n        </Text>\r\n        <Button width=\"auto\" variant=\"secondary\" to={'/'}>\r\n          Take me to the home page\r\n        </Button>\r\n      </PageHeader>\r\n      <FeaturedSection />\r\n    </>;\n}\n_c = NotFound;\nvar _c;\n$RefreshReg$(_c, \"NotFound\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\hooks\\\\useAnalytics.jsx\"\n);\nimport.meta.hot.lastModified = \"1696490276866.0898\";\n}\n// REMIX HMR END\n\nimport {useLocation} from '@remix-run/react';\r\nimport {\r\n  AnalyticsEventName,\r\n  getClientBrowserParameters,\r\n  sendShopifyAnalytics,\r\n  useShopifyCookies,\r\n} from '@shopify/hydrogen';\r\nimport {useEffect, useRef} from 'react';\r\n\r\nimport {usePageAnalytics} from './usePageAnalytics';\r\n\r\nexport function useAnalytics(hasUserConsent) {\r\n  useShopifyCookies({hasUserConsent});\r\n\r\n  const location = useLocation();\r\n  const lastLocationKey = useRef('');\r\n  const pageAnalytics = usePageAnalytics({hasUserConsent});\r\n\r\n  // Page view analytics\r\n  // We want useEffect to execute only when location changes\r\n  // which represents a page view\r\n  useEffect(() => {\r\n    if (lastLocationKey.current === location.key) return;\r\n\r\n    lastLocationKey.current = location.key;\r\n\r\n    const payload = {\r\n      ...getClientBrowserParameters(),\r\n      ...pageAnalytics,\r\n    };\r\n\r\n    sendShopifyAnalytics({\r\n      eventName: AnalyticsEventName.PAGE_VIEW,\r\n      payload,\r\n    });\r\n  }, [location, pageAnalytics]);\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_s2", "_s", "_c", "_s2", "_c2", "_c", "_c2"]
}
