{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).journal._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).journal._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).journal._index.jsx\");\n  import.meta.hot.lastModified = \"1697181594895.8538\";\n}\n// REMIX HMR END\n\nimport { json } from '@shopify/remix-oxygen';\nimport { useLoaderData } from '@remix-run/react';\nimport { flattenConnection, Image } from '@shopify/hydrogen';\nimport { Grid, PageHeader, Section, Link } from '~/components';\nimport { getImageLoadingPriority, PAGINATION_SIZE } from '~/lib/const';\nimport { seoPayload } from '~/lib/seo.server';\nimport { routeHeaders } from '~/data/cache';\nconst BLOG_HANDLE = 'Journal';\nexport const headers = routeHeaders;\nexport const loader = async ({\n  request,\n  context: {\n    storefront\n  }\n}) => {\n  const {\n    language,\n    country\n  } = storefront.i18n;\n  const {\n    blog\n  } = await storefront.query(BLOGS_QUERY, {\n    variables: {\n      blogHandle: BLOG_HANDLE,\n      pageBy: PAGINATION_SIZE,\n      language\n    }\n  });\n  if (!blog?.articles) {\n    throw new Response('Not found', {\n      status: 404\n    });\n  }\n  const articles = flattenConnection(blog.articles).map(article => {\n    const {\n      publishedAt\n    } = article;\n    return {\n      ...article,\n      publishedAt: new Intl.DateTimeFormat(`${language}-${country}`, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }).format(new Date(publishedAt))\n    };\n  });\n  const seo = seoPayload.blog({\n    blog,\n    url: request.url\n  });\n  return json({\n    articles,\n    seo\n  });\n};\nexport default function Journals() {\n  _s();\n  const {\n    articles\n  } = useLoaderData();\n  return <>\r\n      <PageHeader heading={BLOG_HANDLE} />\r\n      <Section>\r\n        <Grid as=\"ol\" layout=\"blog\">\r\n          {articles.map((article, i) => <ArticleCard blogHandle={BLOG_HANDLE.toLowerCase()} article={article} key={article.id} loading={getImageLoadingPriority(i, 2)} />)}\r\n        </Grid>\r\n      </Section>\r\n    </>;\n}\n_s(Journals, \"zk/JH2CQu/i0cqbqoGfJS/SR8u4=\", false, function () {\n  return [useLoaderData];\n});\n_c = Journals;\nfunction ArticleCard({\n  blogHandle,\n  article,\n  loading\n}) {\n  return <li key={article.id}>\r\n      <Link to={`/${blogHandle}/${article.handle}`}>\r\n        {article.image && <div className=\"card-image aspect-[3/2]\">\r\n            <Image alt={article.image.altText || article.title} className=\"object-cover w-full\" data={article.image} aspectRatio=\"3/2\" loading={loading} sizes=\"(min-width: 768px) 50vw, 100vw\" />\r\n          </div>}\r\n        <h2 className=\"mt-4 font-medium\">{article.title}</h2>\r\n        <span className=\"block mt-1\">{article.publishedAt}</span>\r\n      </Link>\r\n    </li>;\n}\n_c2 = ArticleCard;\nconst BLOGS_QUERY = `#graphql\nquery Blog(\n  $language: LanguageCode\n  $blogHandle: String!\n  $pageBy: Int!\n  $cursor: String\n) @inContext(language: $language) {\n  blog(handle: $blogHandle) {\n    title\n    seo {\n      title\n      description\n    }\n    articles(first: $pageBy, after: $cursor) {\n      edges {\n        node {\n          ...Article\n        }\n      }\n    }\n  }\n}\n\nfragment Article on Article {\n  author: authorV2 {\n    name\n  }\n  contentHtml\n  handle\n  id\n  image {\n    id\n    altText\n    url\n    width\n    height\n  }\n  publishedAt\n  title\n}\n`;\nvar _c, _c2;\n$RefreshReg$(_c, \"Journals\");\n$RefreshReg$(_c2, \"ArticleCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,iBAA2B;AAuDlB;AAhFT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oDAAsD,EAAE;AAAA,EACjG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2C;AAC3C,cAAY,IAAI,eAAe;AACjC;AAUA,IAAM,cAAc;AAgDL,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,sFACH;AAAA,uDAAC,cAAW,SAAS,eAArB;AAAA;AAAA;AAAA;AAAA,WAAkC;AAAA,IAClC,mDAAC,WACC,6DAAC,QAAK,IAAG,MAAK,QAAO,QAClB,mBAAS,IAAI,CAAC,SAAS,MAAM,mDAAC,eAAY,YAAY,YAAY,YAAY,GAAG,SAAmC,SAAS,wBAAwB,GAAG,CAAC,KAAjD,QAAQ,IAAnF;AAAA;AAAA;AAAA;AAAA,WAA+H,CAAE,KADjK;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OANG;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,SAAS,YAAY;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,SAAO,mDAAC,QACJ,6DAAC,QAAK,IAAI,IAAI,cAAc,QAAQ,UACjC;AAAA,YAAQ,SAAS,mDAAC,SAAI,WAAU,2BAC7B,6DAAC,SAAM,KAAK,QAAQ,MAAM,WAAW,QAAQ,OAAO,WAAU,uBAAsB,MAAM,QAAQ,OAAO,aAAY,OAAM,SAAkB,OAAM,oCAAnJ;AAAA;AAAA;AAAA;AAAA,WAAoL,KADtK;AAAA;AAAA;AAAA;AAAA,WAEhB;AAAA,IACF,mDAAC,QAAG,WAAU,oBAAoB,kBAAQ,SAA1C;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAA,IAChD,mDAAC,UAAK,WAAU,cAAc,kBAAQ,eAAtC;AAAA;AAAA;AAAA;AAAA,WAAkD;AAAA,OALpD;AAAA;AAAA;AAAA;AAAA,SAMA,KAPY,QAAQ,IAAjB;AAAA;AAAA;AAAA;AAAA,SAQL;AACJ;AACA,MAAM;AA0CN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,UAAU;AAC3B,aAAa,KAAK,aAAa;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
