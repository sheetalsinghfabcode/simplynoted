{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products.$productHandle.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).products.$productHandle.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).products.$productHandle.jsx\");\n  import.meta.hot.lastModified = \"1696573888190.1953\";\n}\n// REMIX HMR END\n\nimport { useRef, Suspense } from 'react';\nimport { Disclosure, Listbox } from '@headlessui/react';\nimport { defer, redirect } from '@shopify/remix-oxygen';\nimport { useLoaderData, Await } from '@remix-run/react';\nimport { AnalyticsPageType, Money, ShopPayButton, VariantSelector, getSelectedProductOptions } from '@shopify/hydrogen';\nimport invariant from 'tiny-invariant';\nimport clsx from 'clsx';\nimport { Heading, IconCaret, IconCheck, IconClose, ProductGallery, ProductSwimlane, Section, Skeleton, Text, Link, AddToCartButton, Button } from '~/components';\nimport { getExcerpt } from '~/lib/utils';\nimport { seoPayload } from '~/lib/seo.server';\nimport { routeHeaders } from '~/data/cache';\nimport { MEDIA_FRAGMENT, PRODUCT_CARD_FRAGMENT } from '~/data/fragments';\nimport { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nexport const headers = routeHeaders;\nlet input, input2, output, output2, outputContainer, outputContainer2;\nexport async function loader({\n  params,\n  request,\n  context\n}) {\n  const {\n    productHandle\n  } = params;\n  invariant(productHandle, 'Missing productHandle param, check route filename');\n  const selectedOptions = getSelectedProductOptions(request);\n  const {\n    shop,\n    product\n  } = await context.storefront.query(PRODUCT_QUERY, {\n    variables: {\n      handle: productHandle,\n      selectedOptions,\n      country: context.storefront.i18n.country,\n      language: context.storefront.i18n.language\n    }\n  });\n  if (!product?.id) {\n    throw new Response('product', {\n      status: 404\n    });\n  }\n  if (!product.selectedVariant) {\n    return redirectToFirstVariant({\n      product,\n      request\n    });\n  }\n\n  // In order to show which variants are available in the UI, we need to query\n  // all of them. But there might be a *lot*, so instead separate the variants\n  // into it's own separate query that is deferred. So there's a brief moment\n  // where variant options might show as available when they're not, but after\n  // this deferred query resolves, the UI will update.\n  const variants = context.storefront.query(VARIANTS_QUERY, {\n    variables: {\n      handle: productHandle,\n      country: context.storefront.i18n.country,\n      language: context.storefront.i18n.language\n    }\n  });\n  const recommended = getRecommendedProducts(context.storefront, product.id);\n\n  // TODO: firstVariant is never used because we will always have a selectedVariant due to redirect\n  // Investigate if we can avoid the redirect for product pages with no search params for first variant\n  const firstVariant = product.variants.nodes[0];\n  const selectedVariant = product.selectedVariant ?? firstVariant;\n  const productAnalytics = {\n    productGid: product.id,\n    variantGid: selectedVariant.id,\n    name: product.title,\n    variantName: selectedVariant.title,\n    brand: product.vendor,\n    price: selectedVariant.price.amount\n  };\n  const seo = seoPayload.product({\n    product,\n    selectedVariant,\n    url: request.url\n  });\n  return defer({\n    variants,\n    product,\n    shop,\n    storeDomain: shop.primaryDomain.url,\n    recommended,\n    analytics: {\n      pageType: AnalyticsPageType.product,\n      resourceId: product.id,\n      products: [productAnalytics],\n      totalValue: parseFloat(selectedVariant.price.amount)\n    },\n    seo\n  });\n}\nfunction redirectToFirstVariant({\n  product,\n  request\n}) {\n  const searchParams = new URLSearchParams(new URL(request.url).search);\n  const firstVariant = product.variants.nodes[0];\n  for (const option of firstVariant.selectedOptions) {\n    searchParams.set(option.name, option.value);\n  }\n  throw redirect(`/products/${product.handle}?${searchParams.toString()}`, 302);\n}\nexport default function Product() {\n  _s();\n  const {\n    product,\n    shop,\n    recommended,\n    variants\n  } = useLoaderData();\n  console.log(variants, '!1!!!!!!variants');\n  console.log(product.variants.nodes[0].price, \"productData-------------\");\n  const {\n    media,\n    title,\n    vendor,\n    descriptionHtml\n  } = product;\n  const {\n    shippingPolicy,\n    refundPolicy\n  } = shop;\n  const [name, setName] = useState('Enter Your Text Here....');\n  const [name2, setName2] = useState('');\n  const [show, setShow] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [productshow, setProductShow] = useState(true);\n\n  //  input = document.querySelector('.inputText');\n  input2 = document.querySelector('.inputText2');\n  console.log(input, \"PPPPPPPPPPPPPPPPPP\");\n  output2 = document.querySelector('.output2');\n  outputContainer2 = document.querySelector('.secDiv');\n  if (input) {\n    input.addEventListener('input', processInput);\n  }\n  function resize_to_fit() {\n    let fontSize = window.getComputedStyle(output).fontSize;\n    output.style.fontSize = parseFloat(fontSize) - 1 + 'px';\n    console.log(output.clientHeight, \"------------\", outputContainer.clientHeight);\n    if (output.clientHeight >= outputContainer.clientHeight) {\n      resize_to_fit();\n    }\n  }\n  async function processInput() {\n    console.log(input.value, \"PPPPPPPPPPPPPPPPPPPPPPPPPPP\", this.value);\n    output.innerHTML = await this.value;\n    output.style.fontSize = '60px'; // Default font size\n    resize_to_fit();\n  }\n  function resize_to_fit2() {\n    let fontSize = window.getComputedStyle(output2).fontSize;\n    output2.style.fontSize = parseFloat(fontSize) - 1 + 'px';\n    console.log(output2.clientHeight, \"------------\", outputContainer2.clientHeight);\n    if (output2.clientHeight >= outputContainer2.clientHeight) {\n      resize_to_fit2();\n    }\n  }\n  async function processInput2() {\n    output2.innerHTML = await this.value;\n    output2.style.fontSize = '60px'; // Default font size\n    resize_to_fit2();\n  }\n  if (input2) {\n    input2.addEventListener('input', processInput2);\n  }\n  function setFont() {\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaa\");\n    var selectFont = document.getElementById(\"font\");\n    if (selectFont) {\n      var selectFontValue = selectFont.options[selectFont.selectedIndex].value;\n      console.log(selectFontValue, \"==========\");\n      if (selectFontValue) {\n        document.getElementById(\"abcd\").style.fontFamily = selectFontValue;\n        document.getElementById(\"abcd2\").style.fontFamily = selectFontValue;\n      }\n      // else if (selectFontValue == \"Plain\") {\n      //     document.getElementById(\"abcd\").style.fontFamily  = \"Bold\";\n      // }\n      // else if (selectFontValue == \"Bold\") {\n      //     document.getElementById(\"abcd\").style.fontFamily  = 'Courier';\n      // }\n      // else {\n      //     document.getElementById(\"abcd\").style.fontFamily  = 'Times New Roman';\n      // }\n    }\n  }\n\n  const ref = useRef(null);\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n  useEffect(() => {\n    //   output = document.querySelector('.output');\n    // newData()\n    input = ref.current;\n    output = ref1.current;\n    outputContainer = ref2.current;\n    // console.log(element,'refElement');\n    console.log(input.className, output.className, outputContainer.className);\n  }, []);\n  return <>\r\n    {productshow ? <>\r\n    <Section className=\"px-0 md:px-8 lg:px-12\">\r\n    <div className=\"grid items-start md:gap-6 lg:gap-5 md:grid-cols-2 lg:grid-cols-3\">\r\n      <ProductGallery media={media.nodes} className=\"w-full lg:col-span-2\" />\r\n      <div className=\"sticky md:-mb-nav md:top-nav md:-translate-y-nav md:h-screen md:pt-nav hiddenScroll md:overflow-y-scroll ml-[-300px]\">\r\n        <section className=\"flex flex-col w-full max-w-xl gap-8 p-6 md:mx-auto md:max-w-sm md:px-0\">\r\n          <div className=\"grid gap-2\">\r\n            <Heading as=\"h1\" className=\"whitespace-normal\">\r\n              {title}\r\n            </Heading>\r\n            <Text className={'opacity-50 font-medium'}>$ {product.variants.nodes[0].price.amount}</Text>\r\n            {/* {vendor && (\r\n              <Text className={'opacity-50 font-medium'}>{vendor}</Text>\r\n             )} */}\r\n            <div className='buttonClass flex justify-start'>\r\n              <div className='buttonDiv pr-5'>\r\n                <button className=\"bg-[#001a5f] text-[#fff] p-2 rounded \" onClick={() => setShow(false)}>Single Card</button>\r\n              </div>\r\n              <div className='gap-2'>\r\n                <button className=\"bg-[#ef6e6e] text-[#fff] p-2 rounded \" onClick={() => setShow(true)}>Bulk Purchase</button>\r\n              </div>\r\n            </div>\r\n            {show && <table class=\"price-breakdown desktop\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td class=\"label\">Quantity</td><td>1-99</td><td>100-249</td><td>250-499</td><td>500-999</td><td>1000-2499</td><td>2500+</td></tr>\r\n                  <tr>\r\n                    <td class=\"label\">Price</td><td>$3.25</td><td>$3.15</td><td>$3.00</td><td>$2.85</td><td>$2.70</td><td>$2.55</td></tr>\r\n                </tbody>\r\n              </table>}\r\n            <div className='selectOtion mb-5 flex'>\r\n              <div className='w-[192px]'>\r\n                <Text className='text-sm w-[100px]'>Standard Handwriting Style</Text>\r\n                <br />\r\n                <select id=\"font\" onClick={() => setFont()}>\r\n                  <option value=\"pinocchio\" className={`font-pinocchio`}>Pinocchio</option>\r\n                  <option value=\"tarzan\" className={`font-tarzan`}>Tarzan</option>\r\n                  <option value=\"stitch\" className={`font-stitch`}>Stitch</option>\r\n                  <option value=\"simba\" className={`font-simba`}>Simba</option>\r\n                  <option value=\"roo\" className={`font-roo`}>Roo</option>\r\n                  <option value=\"nimo\" className={`font-nimo`}>Nimo</option>\r\n                  <option value=\"lumiere\" className={`font-lumiere`}>Lumiere</option>\r\n                  <option value=\"kaa\" className={`font-kaa`}>Kaa</option>\r\n                  <option value=\"kaaNew\" className={`font-kaaNew`}>KaaNew</option>\r\n                  <option value=\"dumbo\" className={`font-dumbo`}>Dumbo</option>\r\n                  <option value=\"donald\" className={`font-donald`}>Donald</option>\r\n                  <option value=\"aladdin\" className={`font-aladdin`}>Aladdin</option>\r\n                  <option value=\"belle\" className={`font-belle`}>Belle</option>\r\n                  <option value=\"boo\" className={`font-boo`}>Boo</option>\r\n                  <option value=\"cinderella\" className={`font-cinderella`}>Cinderella</option>\r\n                  <option value=\"copper\" className={`font-copper`}>Copper</option>\r\n                  <option value=\"jasmine\" className={`font-jasmine`}>Jasmine</option>\r\n                  <option value=\"merlin\" className={`font-merlin`}>Merlin</option>\r\n                  <option value=\"goofy\" className={`font-goofy`}>Goofy</option>\r\n                  <option value=\"hercules\" className={`font-hercules`}>Hercules</option>\r\n                  <option value=\"rafiki\" className={`font-rafiki`}>Rafiki</option>\r\n                  <option value=\"rapunzel\" className={`font-rapunzel`}>Rapunzel</option>\r\n                  <option value=\"ratigan\" className={`font-ratigan`}>Ratigan</option>\r\n                  <option value=\"sarabi\" className={`font-sarabi`}>Sarabi</option>\r\n                  <option value=\"scar\" className={`font-scar`}>Scar</option>\r\n                  <option value=\"triton\" className={`font-triton`}>Triton</option>\r\n                  <option value=\"woody\" className={`font-woody`}>Woody</option>\r\n\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <Text className='text-sm'>Custom Handwriting Style</Text>\r\n                <br />\r\n                <select id=\"Coustomfont text-sm\">\r\n                  <option className='text-sm'>Custom Handwriting Style</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Text>Optional shipping date</Text><br />\r\n            <input type='date' />\r\n            {/* <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} /> */}\r\n            </div>\r\n          </div>\r\n          {/* Product page Data Vieew */}\r\n          {/* <Suspense fallback={<ProductForm variants={[]} />}>\r\n            <Await\r\n              errorElement=\"There was a problem loading related products\"\r\n              resolve={variants}\r\n            >\r\n              {(resp) => (\r\n                <ProductForm\r\n                  variants={resp.product?.variants.nodes || []}\r\n                />\r\n              )}\r\n            </Await>\r\n            </Suspense> */}\r\n\r\n\r\n          {/* Return and Policy button */}\r\n          {/* <div className=\"grid gap-4 py-4\">\r\n            {descriptionHtml && (\r\n              <ProductDetail\r\n                title=\"Product Details\"\r\n                content={descriptionHtml}\r\n              />\r\n            )}\r\n            {shippingPolicy?.body && (\r\n              <ProductDetail\r\n                title=\"Shipping\"\r\n                content={getExcerpt(shippingPolicy.body)}\r\n                learnMore={`/policies/${shippingPolicy.handle}`}\r\n              />\r\n            )}\r\n            {refundPolicy?.body && (\r\n              <ProductDetail\r\n                title=\"Returns\"\r\n                content={getExcerpt(refundPolicy.body)}\r\n                learnMore={`/policies/${refundPolicy.handle}`}\r\n              />\r\n            )}\r\n           </div> */}\r\n        </section>\r\n\r\n      </div>\r\n\r\n      <div>\r\n\r\n      </div>\r\n    </div>\r\n    {/* <div className=\"grid items-start md:gap-6 lg:gap-20 md:grid-cols-2 lg:grid-cols-3\">\r\n      <input onChange={onChange} value={name} id=\"your-notes-for-our-design\"\r\n        disabled placeholder='Enter your custom message here....'\r\n        type=\"text\" name=\"properties [Your notes for our design]\"\r\n      />\r\n     </div> */}\r\n    {/* <div className=\"grid items-start md:gap-6 lg:gap-20 md:grid-cols-2 lg:grid-cols-3\">\r\n      <input id=\"your-notes-for-our-design\" onChange={onChange} value={name} placeholder='Enter your custom message here....' type=\"text\" name=\"properties [Your notes for our design]\" />\r\n     </div> */}\r\n\r\n\r\n    <div className='mainDivForBox flex gap-10'>\r\n      <div id=\"outer\" className=\"outerr\">\r\n        <div className='outerSec' ref={ref2}>\r\n          <div id='abcd' ref={ref1} className=\"output\">\r\n            {name}\r\n          </div>\r\n        </div>\r\n        <div className='secDiv'>\r\n          <div id='abcd2' className=\"output2\">\r\n            {name2}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='textAreaView w-[600px]'>\r\n        <textarea type=\"text\" id=\"example-one-input\" ref={ref} className='inputText' maxlength=\"450\" onChange={e => setName(e.target.value)} placeholder=\"Enter your custom message text here...\" data-gtm-form-interact-field-id=\"0\"></textarea>\r\n        <textarea type=\"text\" id=\"example-one-input2\" className='inputText2' maxlength=\"24\" onChange={e => setName2(e.target.value)} placeholder=\"Enter here...\" data-gtm-form-interact-field-id=\"0\"></textarea>\r\n        <div className='bg-[#1b5299] h-[50px] text-center mt-10'>\r\n          <button className='text-[#fff] items-center justify-center mt-3 w-full' onClick={() => setProductShow(false)}>Next</button>\r\n        </div>\r\n      </div>\r\n      {/* <input id='customText' className='inputText' type=\"text\" placeholder=\"Enter your custom text here....\" /> */}\r\n\r\n    </div>\r\n\r\n\r\n\r\n    {/* select FontFamily */}\r\n\r\n    {/* <div id=\"content\">\r\n     <h2 >\r\n     Font Style Changes After Selecting the Dropdown List\r\n     </h2>\r\n     </div>\r\n     <select  onchange=\"changingFontStyle (this);\">\r\n     <option value=\"Times New Roman\" elected=\"selected\">\r\n     Times New Roman\r\n     </option>\r\n     <option value=\"Arial\">Arial</option>\r\n     <option value=\"fantasy\">Fantasy</option>\r\n     <option value=\"cursive\">cursive</option>\r\n     </select> */}\r\n\r\n    {/* <script>\r\n     var changingFontStyle = function (fontstyle) {\r\n     document.getElementById(\"content\").style.fontFamily = fontstyle.value\r\n     }\r\n     </script> */}\r\n  </Section>\r\n  <Suspense fallback={<Skeleton className=\"h-32\" />}>\r\n    <Await errorElement=\"There was a problem loading related products\" resolve={recommended}>\r\n      {products => <ProductSwimlane title=\"Related Products\" products={products} />}\r\n    </Await>\r\n  </Suspense>\r\n  </> : <div className=' flex w-full h-full gap-2'>\r\n    <div className='m-10'>\r\n      <h3 className=''><i class=\"icon-g-02\"></i>Back To Product Customization</h3>\r\n    </div>\r\n    <div className='bg-[#fff]'>\r\n\r\n    </div>\r\n  </div>}\r\n      \r\n    </>;\n}\n\n// export function ProductForm({ variants }) {\n//   const { product, analytics, storeDomain } = useLoaderData();\n\n//   const closeRef = useRef(null);\n\n//   /**\n//    * Likewise, we're defaulting to the first variant for purposes\n//    * of add to cart if there is none returned from the loader.\n//    * A developer can opt out of this, too.\n//    */\n//   const selectedVariant = product.selectedVariant;\n//   const isOutOfStock = !selectedVariant?.availableForSale;\n\n//   const isOnSale =\n//     selectedVariant?.price?.amount &&\n//     selectedVariant?.compareAtPrice?.amount &&\n//     selectedVariant?.price?.amount < selectedVariant?.compareAtPrice?.amount;\n\n//   const productAnalytics = {\n//     ...analytics.products[0],\n//     quantity: 1,\n//   };\n\n//   return (\n//     <div className=\"grid gap-10\">\n//       <div className=\"grid gap-4\">\n//         <VariantSelector\n//           handle={product.handle}\n//           options={product.options}\n//           variants={variants}\n//         >\n//           {({ option }) => {\n//             console.log(option, '+++++++++++++++++++=');\n//             return (\n//               <div\n//                 key={option.name}\n//                 className=\"flex flex-col flex-wrap mb-4 gap-y-2 last:mb-0\"\n//               >\n//                 <Heading as=\"legend\" size=\"lead\" className=\"min-w-[4rem]\">\n//                   {option.name}\n//                 </Heading>\n//                 <div className=\"flex flex-wrap items-baseline gap-4\">\n//                   {option.values.length > 7 ? (\n//                     <div className=\"relative w-full\">\n//                       <Listbox>\n//                         {({ open }) => (\n//                           <>\n//                             <Listbox.Button\n//                               ref={closeRef}\n//                               className={clsx(\n//                                 'flex items-center justify-between w-full py-3 px-4 border border-primary',\n//                                 open\n//                                   ? 'rounded-b md:rounded-t md:rounded-b-none'\n//                                   : 'rounded',\n//                               )}\n//                             >\n//                               <span>{option.value}</span>\n//                               <IconCaret direction={open ? 'up' : 'down'} />\n//                             </Listbox.Button>\n//                             <Listbox.Options\n//                               className={clsx(\n//                                 'border-primary bg-contrast absolute bottom-12 z-30 grid h-48 w-full overflow-y-scroll rounded-t border px-2 py-2 transition-[max-height] duration-150 sm:bottom-auto md:rounded-b md:rounded-t-none md:border-t-0 md:border-b',\n//                                 open ? 'max-h-48' : 'max-h-0',\n//                               )}\n//                             >\n//                               {option.values\n//                                 .filter((value) => value.isAvailable)\n//                                 .map(({ value, to, isActive }) => (\n//                                   <Listbox.Option\n//                                     key={`option-${option.name}-${value}`}\n//                                     value={value}\n//                                   >\n//                                     {({ active }) => (\n//                                       <Link\n//                                         to={to}\n//                                         className={clsx(\n//                                           'text-primary w-full p-2 transition rounded flex justify-start items-center text-left cursor-pointer',\n//                                           active && 'bg-primary/10',\n//                                         )}\n//                                         onClick={() => {\n//                                           if (!closeRef?.current) return;\n//                                           closeRef.current.click();\n//                                         }}\n//                                       >\n//                                         {value}\n//                                         {isActive && (\n//                                           <span className=\"ml-2\">\n//                                             <IconCheck />\n//                                           </span>\n//                                         )}\n//                                       </Link>\n//                                     )}\n//                                   </Listbox.Option>\n//                                 ))}\n//                             </Listbox.Options>\n//                           </>\n//                         )}\n//                       </Listbox>\n//                     </div>\n//                   ) : (\n//                     option.values.map(({ value, isAvailable, isActive, to }) => (\n//                       <Link\n//                         key={option.name + value}\n//                         to={to}\n//                         preventScrollReset\n//                         prefetch=\"intent\"\n//                         replace\n//                         className={clsx(\n//                           'leading-none py-1 border-b-[1.5px] cursor-pointer transition-all duration-200',\n//                           isActive ? 'border-primary/50' : 'border-primary/0',\n//                           isAvailable ? 'opacity-100' : 'opacity-50',\n//                         )}\n//                       >\n//                         {value}\n//                       </Link>\n//                     ))\n//                   )}\n//                 </div>\n//               </div>\n//             );\n//           }}\n//         </VariantSelector>\n//         {selectedVariant && (\n//           <div className=\"grid items-stretch gap-4\">\n//             {isOutOfStock ? (\n//               <Button variant=\"secondary\" disabled>\n//                 <Text>Sold out</Text>\n//               </Button>\n//             ) : (\n//               <AddToCartButton\n//                 lines={[\n//                   {\n//                     merchandiseId: selectedVariant.id,\n//                     quantity: 1,\n//                   },\n//                 ]}\n//                 variant=\"primary\"\n//                 data-test=\"add-to-cart\"\n//                 analytics={{\n//                   products: [productAnalytics],\n//                   totalValue: parseFloat(productAnalytics.price),\n//                 }}\n//               >\n//                 <Text\n//                   as=\"span\"\n//                   className=\"flex items-center justify-center gap-2\"\n//                 >\n//                   <span>Add to Cart</span> <span>\u00B7</span>{' '}\n//                   <Money\n//                     withoutTrailingZeros\n//                     data={selectedVariant?.price}\n//                     as=\"span\"\n//                   />\n//                   {isOnSale && (\n//                     <Money\n//                       withoutTrailingZeros\n//                       data={selectedVariant?.compareAtPrice}\n//                       as=\"span\"\n//                       className=\"opacity-50 strike\"\n//                     />\n//                   )}\n//                 </Text>\n//               </AddToCartButton>\n//             )}\n//             {!isOutOfStock && (\n//               <ShopPayButton\n//                 width=\"100%\"\n//                 variantIds={[selectedVariant?.id]}\n//                 storeDomain={storeDomain}\n//               />\n//             )}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n_s(Product, \"xsFRhwqK5wCfF1W98g4l3Q0BlRo=\", false, function () {\n  return [useLoaderData];\n});\n_c = Product;\nfunction ProductDetail({\n  title,\n  content,\n  learnMore\n}) {\n  return <Disclosure key={title} as=\"div\" className=\"grid w-full gap-2\">\r\n      {({\n      open\n    }) => <>\r\n          <Disclosure.Button className=\"text-left\">\r\n            <div className=\"flex justify-between\">\r\n              <Text size=\"lead\" as=\"h4\">\r\n                {title}\r\n              </Text>\r\n              <IconClose className={clsx('transition-transform transform-gpu duration-200', !open && 'rotate-[45deg]')} />\r\n            </div>\r\n          </Disclosure.Button>\r\n\r\n          <Disclosure.Panel className={'pb-4 pt-2 grid gap-2'}>\r\n            <div className=\"prose dark:prose-invert\" dangerouslySetInnerHTML={{\n          __html: content\n        }} />\r\n            {learnMore && <div className=\"\">\r\n                <Link className=\"pb-px border-b border-primary/30 text-primary/50\" to={learnMore}>\r\n                  Learn more\r\n                </Link>\r\n              </div>}\r\n          </Disclosure.Panel>\r\n        </>}\r\n    </Disclosure>;\n}\n_c2 = ProductDetail;\nconst PRODUCT_VARIANT_FRAGMENT = `#graphql\n  fragment ProductVariantFragment on ProductVariant {\n    id\n    availableForSale\n    selectedOptions {\n      name\n      value\n    }\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    price {\n      amount\n      currencyCode\n    }\n    compareAtPrice {\n      amount\n      currencyCode\n    }\n    sku\n    title\n    unitPrice {\n      amount\n      currencyCode\n    }\n    product {\n      title\n      handle\n    }\n  }\n`;\nconst PRODUCT_QUERY = `#graphql\n  query Product(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n    $selectedOptions: [SelectedOptionInput!]!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      id\n      title\n      vendor\n      handle\n      descriptionHtml\n      description\n      options {\n        name\n        values\n      }\n      selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n        ...ProductVariantFragment\n      }\n      media(first: 7) {\n        nodes {\n          ...Media\n        }\n      }\n      variants(first: 1) {\n        nodes {\n          ...ProductVariantFragment\n        }\n      }\n      seo {\n        description\n        title\n      }\n    }\n    shop {\n      name\n      primaryDomain {\n        url\n      }\n      shippingPolicy {\n        body\n        handle\n      }\n      refundPolicy {\n        body\n        handle\n      }\n    }\n  }\n  ${MEDIA_FRAGMENT}\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\nconst VARIANTS_QUERY = `#graphql\n  query variants(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      variants(first: 250) {\n        nodes {\n          ...ProductVariantFragment\n        }\n      }\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  query productRecommendations(\n    $productId: ID!\n    $count: Int\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    recommended: productRecommendations(productId: $productId) {\n      ...ProductCard\n    }\n    additional: products(first: $count, sortKey: BEST_SELLING) {\n      nodes {\n        ...ProductCard\n      }\n    }\n  }\n  ${PRODUCT_CARD_FRAGMENT}\n`;\nasync function getRecommendedProducts(storefront, productId) {\n  const products = await storefront.query(RECOMMENDED_PRODUCTS_QUERY, {\n    variables: {\n      productId,\n      count: 12\n    }\n  });\n  invariant(products, 'No data returned from Shopify API');\n  const mergedProducts = (products.recommended ?? []).concat(products.additional.nodes).filter((value, index, array) => array.findIndex(value2 => value2.id === value.id) === index);\n  const originalProduct = mergedProducts.findIndex(item => item.id === productId);\n  mergedProducts.splice(originalProduct, 1);\n  return {\n    nodes: mergedProducts\n  };\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"ProductDetail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
