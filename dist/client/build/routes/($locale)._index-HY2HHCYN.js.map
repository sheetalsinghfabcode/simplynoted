{
  "version": 3,
  "sources": ["../../../../app/routes/($locale)._index.jsx", "../../../../app/components/home/Home.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale)._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale)._index.jsx\");\n  import.meta.hot.lastModified = \"1696490276876.3003\";\n}\n// REMIX HMR END\n\nimport { defer } from '@shopify/remix-oxygen';\nimport { Suspense } from 'react';\nimport { Await, useLoaderData } from '@remix-run/react';\nimport { AnalyticsPageType } from '@shopify/hydrogen';\nimport { ProductSwimlane, FeaturedCollections, Hero } from '~/components';\nimport { MEDIA_FRAGMENT, PRODUCT_CARD_FRAGMENT } from '~/data/fragments';\nimport { getHeroPlaceholder } from '~/lib/placeholders';\nimport { seoPayload } from '~/lib/seo.server';\nimport { routeHeaders } from '~/data/cache';\nimport Home from '~/components/home/Home';\nexport const headers = routeHeaders;\nexport async function loader({\n  params,\n  context\n}) {\n  const {\n    language,\n    country\n  } = context.storefront.i18n;\n  if (params.locale && params.locale.toLowerCase() !== `${language}-${country}`.toLowerCase()) {\n    // If the locale URL param is defined, yet we still are on `EN-US`\n    // the the locale param must be invalid, send to the 404 page\n    throw new Response(null, {\n      status: 404\n    });\n  }\n  const {\n    shop,\n    hero\n  } = await context.storefront.query(HOMEPAGE_SEO_QUERY, {\n    variables: {\n      handle: 'freestyle'\n    }\n  });\n  const seo = seoPayload.home();\n  return defer({\n    shop,\n    primaryHero: hero,\n    // These different queries are separated to illustrate how 3rd party content\n    // fetching can be optimized for both above and below the fold.\n    featuredProducts: context.storefront.query(HOMEPAGE_FEATURED_PRODUCTS_QUERY, {\n      variables: {\n        /**\r\n         * Country and language properties are automatically injected\r\n         * into all queries. Passing them is unnecessary unless you\r\n         * want to override them from the following default:\r\n         */\n        country,\n        language\n      }\n    }),\n    secondaryHero: context.storefront.query(COLLECTION_HERO_QUERY, {\n      variables: {\n        handle: 'backcountry',\n        country,\n        language\n      }\n    }),\n    featuredCollections: context.storefront.query(FEATURED_COLLECTIONS_QUERY, {\n      variables: {\n        country,\n        language\n      }\n    }),\n    tertiaryHero: context.storefront.query(COLLECTION_HERO_QUERY, {\n      variables: {\n        handle: 'winter-2022',\n        country,\n        language\n      }\n    }),\n    analytics: {\n      pageType: AnalyticsPageType.home\n    },\n    seo\n  });\n}\nexport default function Homepage() {\n  _s();\n  const {\n    primaryHero,\n    secondaryHero,\n    tertiaryHero,\n    featuredCollections,\n    featuredProducts\n  } = useLoaderData();\n\n  // TODO: skeletons vs placeholders\n  const skeletons = getHeroPlaceholder([{}, {}, {}]);\n  return <>\r\n      {primaryHero && <Hero {...primaryHero} height=\"full\" top loading=\"eager\" />}\r\n      <Home />\r\n\r\n      {featuredProducts && <Suspense>\r\n          <Await resolve={featuredProducts}>\r\n            {({\n          products\n        }) => {\n          if (!products?.nodes) return <></>;\n          return <ProductSwimlane products={products} title=\"Featured Products\" count={4} />;\n        }}\r\n          </Await>\r\n        </Suspense>}\r\n\r\n      {secondaryHero && <Suspense fallback={<Hero {...skeletons[1]} />}>\r\n          <Await resolve={secondaryHero}>\r\n            {({\n          hero\n        }) => {\n          if (!hero) return <></>;\n          return <Hero {...hero} />;\n        }}\r\n          </Await>\r\n        </Suspense>}\r\n\r\n      {featuredCollections && <Suspense>\r\n          <Await resolve={featuredCollections}>\r\n            {({\n          collections\n        }) => {\n          if (!collections?.nodes) return <></>;\n          return <FeaturedCollections collections={collections} title=\"Collections\" />;\n        }}\r\n          </Await>\r\n        </Suspense>}\r\n\r\n      {tertiaryHero && <Suspense fallback={<Hero {...skeletons[2]} />}>\r\n          <Await resolve={tertiaryHero}>\r\n            {({\n          hero\n        }) => {\n          if (!hero) return <></>;\n          return <Hero {...hero} />;\n        }}\r\n          </Await>\r\n        </Suspense>}\r\n    </>;\n}\n_s(Homepage, \"X5SioGSeV4DDbsdPFtQ4WtKo3TU=\", false, function () {\n  return [useLoaderData];\n});\n_c = Homepage;\nconst COLLECTION_CONTENT_FRAGMENT = `#graphql\n  fragment CollectionContent on Collection {\n    id\n    handle\n    title\n    descriptionHtml\n    heading: metafield(namespace: \"hero\", key: \"title\") {\n      value\n    }\n    byline: metafield(namespace: \"hero\", key: \"byline\") {\n      value\n    }\n    cta: metafield(namespace: \"hero\", key: \"cta\") {\n      value\n    }\n    spread: metafield(namespace: \"hero\", key: \"spread\") {\n      reference {\n        ...Media\n      }\n    }\n    spreadSecondary: metafield(namespace: \"hero\", key: \"spread_secondary\") {\n      reference {\n        ...Media\n      }\n    }\n  }\n  ${MEDIA_FRAGMENT}\n`;\nconst HOMEPAGE_SEO_QUERY = `#graphql\n  query seoCollectionContent($handle: String, $country: CountryCode, $language: LanguageCode)\n  @inContext(country: $country, language: $language) {\n    hero: collection(handle: $handle) {\n      ...CollectionContent\n    }\n    shop {\n      name\n      description\n    }\n  }\n  ${COLLECTION_CONTENT_FRAGMENT}\n`;\nconst COLLECTION_HERO_QUERY = `#graphql\n  query heroCollectionContent($handle: String, $country: CountryCode, $language: LanguageCode)\n  @inContext(country: $country, language: $language) {\n    hero: collection(handle: $handle) {\n      ...CollectionContent\n    }\n  }\n  ${COLLECTION_CONTENT_FRAGMENT}\n`;\n\n// @see: https://shopify.dev/api/storefront/2023-07/queries/products\nexport const HOMEPAGE_FEATURED_PRODUCTS_QUERY = `#graphql\n  query homepageFeaturedProducts($country: CountryCode, $language: LanguageCode)\n  @inContext(country: $country, language: $language) {\n    products(first: 8) {\n      nodes {\n        ...ProductCard\n      }\n    }\n  }\n  ${PRODUCT_CARD_FRAGMENT}\n`;\n\n// @see: https://shopify.dev/api/storefront/2023-07/queries/collections\nexport const FEATURED_COLLECTIONS_QUERY = `#graphql\n  query homepageFeaturedCollections($country: CountryCode, $language: LanguageCode)\n  @inContext(country: $country, language: $language) {\n    collections(\n      first: 4,\n      sortKey: UPDATED_AT\n    ) {\n      nodes {\n        id\n        title\n        handle\n        image {\n          altText\n          width\n          height\n          url\n        }\n      }\n    }\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\home\\\\\\\\Home.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\home\\\\Home.jsx\");\n  import.meta.hot.lastModified = \"1696490276860.2004\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport CardKiller from '../../../assets/Image/Card_Keller_kwlegacy.webp';\nimport LogoSimplinoted from '../../../assets/Image/Your_Logo_simplinoted.webp';\nimport { Button } from '../Button';\nexport default function Home() {\n  return <div>\r\n     <div className='sec-section'>\r\n\r\n     <div className='handwritten-notice'>\r\n      <h3>Send Real Handwritten Notes <br></br></h3>\r\n             <p>to your____________</p>\r\n         <h2 className='scale-starting'>Send real handwritten notes, at scale.<span><b>Starting at $3.25</b></span></h2>\r\n         <button type=\"button\" className='start-writing-button'>\r\n          START WRITING!\r\n          </button>\r\n          <button type=\"button\" className='request-a-button' onClick={() => window.open(\"https://share.hsforms.com/1goN6DmMuTFaYMfPPD4I5ng39obb\", \"_blank\")}>\r\n          REQUEST A SAMPLE\r\n          </button>\r\n            </div>\r\n    <img className='logo-simplinoted' src={LogoSimplinoted} alt=\"LogoSimplinotedpic\" /> \r\n          \r\n       <img className='cars-killer' src={CardKiller} alt=\"CardKillerpic\" /> \r\n\r\n      </div>\r\n \r\n       <video className='robot-gif' autoPlay loop muted>\r\n        <source src=\"https://cdn.shopify.com/s/files/1/0275/6457/2777/files/robots.webm?v=1650939452\" type=\"video/webm\"></source>\r\n       </video> \r\n    </div>;\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "_c"]
}
