{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.recover.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).account.recover.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).account.recover.jsx\");\n  import.meta.hot.lastModified = \"1696490276883.7463\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@shopify/remix-oxygen';\nimport { Form, useActionData } from '@remix-run/react';\nimport { useState } from 'react';\nimport { Link } from '~/components';\nimport { getInputStyleClasses } from '~/lib/utils';\nexport async function loader({\n  context,\n  params\n}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect(params.locale ? `${params.locale}/account` : '/account');\n  }\n  return new Response(null);\n}\nconst badRequest = data => json(data, {\n  status: 400\n});\nexport const action = async ({\n  request,\n  context\n}) => {\n  const formData = await request.formData();\n  const email = formData.get('email');\n  if (!email || typeof email !== 'string') {\n    return badRequest({\n      formError: 'Please provide an email.'\n    });\n  }\n  try {\n    await context.storefront.mutate(CUSTOMER_RECOVER_MUTATION, {\n      variables: {\n        email\n      }\n    });\n    return json({\n      resetRequested: true\n    });\n  } catch (error) {\n    return badRequest({\n      formError: 'Something went wrong. Please try again later.'\n    });\n  }\n};\nexport const meta = () => {\n  return [{\n    title: 'Recover Password'\n  }];\n};\nexport default function Recover() {\n  _s();\n  const actionData = useActionData();\n  const [nativeEmailError, setNativeEmailError] = useState(null);\n  const isSubmitted = actionData?.resetRequested;\n  return <div className=\"flex justify-center my-24 px-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        {isSubmitted ? <>\r\n            <h1 className=\"text-4xl\">Request Sent.</h1>\r\n            <p className=\"mt-4\">\r\n              If that email address is in our system, you will receive an email\r\n              with instructions about how to reset your password in a few\r\n              minutes.\r\n            </p>\r\n          </> : <>\r\n            <h1 className=\"text-4xl\">Forgot Password.</h1>\r\n            <p className=\"mt-4\">\r\n              Enter the email address associated with your account to receive a\r\n              link to reset your password.\r\n            </p>\r\n            {/* TODO: Add onSubmit to validate _before_ submission with native? */}\r\n            <Form method=\"post\" noValidate className=\"pt-6 pb-8 mt-4 mb-4 space-y-3\">\r\n              {actionData?.formError && <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\r\n                  <p className=\"m-4 text-s text-contrast\">\r\n                    {actionData.formError}\r\n                  </p>\r\n                </div>}\r\n              <div>\r\n                <input className={`mb-1 ${getInputStyleClasses(nativeEmailError)}`} id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" required placeholder=\"Email address\" aria-label=\"Email address\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus onBlur={event => {\n              setNativeEmailError(event.currentTarget.value.length && !event.currentTarget.validity.valid ? 'Invalid email address' : null);\n            }} />\r\n                {nativeEmailError && <p className=\"text-red-500 text-xs\">\r\n                    {nativeEmailError} &nbsp;\r\n                  </p>}\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <button className=\"bg-primary text-contrast rounded py-2 px-4 focus:shadow-outline block w-full\" type=\"submit\">\r\n                  Request Reset Link\r\n                </button>\r\n              </div>\r\n              <div className=\"flex items-center mt-8 border-t border-gray-300\">\r\n                <p className=\"align-baseline text-sm mt-6\">\r\n                  Return to &nbsp;\r\n                  <Link className=\"inline underline\" to=\"/account/login\">\r\n                    Login\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </Form>\r\n          </>}\r\n      </div>\r\n    </div>;\n}\n_s(Recover, \"9REzYhp7lbVUyS2/Jhezff30qWw=\", false, function () {\n  return [useActionData];\n});\n_c = Recover;\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover($email: String!) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"Recover\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
