{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\($locale).products._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\($locale).products._index.jsx\");\n  import.meta.hot.lastModified = \"1696849699251.823\";\n}\n// REMIX HMR END\n\nimport { json } from '@shopify/remix-oxygen';\nimport { useLoaderData } from '@remix-run/react';\nimport invariant from 'tiny-invariant';\nimport { Pagination, getPaginationVariables } from '@shopify/hydrogen';\nimport { PageHeader, Section, ProductCard, Grid } from '~/components';\nimport { PRODUCT_CARD_FRAGMENT } from '~/data/fragments';\nimport { getImageLoadingPriority } from '~/lib/const';\nimport { seoPayload } from '~/lib/seo.server';\nimport { routeHeaders } from '~/data/cache';\nconst PAGE_BY = 8;\nexport const headers = routeHeaders;\nexport async function loader({\n  request,\n  context: {\n    storefront\n  }\n}) {\n  const variables = getPaginationVariables(request, {\n    pageBy: PAGE_BY\n  });\n  const data = await storefront.query(ALL_PRODUCTS_QUERY, {\n    variables: {\n      ...variables,\n      country: storefront.i18n.country,\n      language: storefront.i18n.language\n    }\n  });\n  invariant(data, 'No data returned from Shopify API');\n  const seo = seoPayload.collection({\n    url: request.url,\n    collection: {\n      id: 'all-products',\n      title: 'All Products',\n      handle: 'products',\n      descriptionHtml: 'All the store products',\n      description: 'All the store products',\n      seo: {\n        title: 'All Products',\n        description: 'All the store products'\n      },\n      metafields: [],\n      products: data.products,\n      updatedAt: ''\n    }\n  });\n  return json({\n    products: data.products,\n    seo\n  });\n}\nexport default function AllProducts() {\n  _s();\n  const {\n    products\n  } = useLoaderData();\n  return <>\r\n      <PageHeader heading=\"All Products\" variant=\"allCollections\" />\r\n      <Section>\r\n        <Pagination connection={products}>\r\n          {({\n          nodes,\n          isLoading,\n          NextLink,\n          PreviousLink\n        }) => {\n          const itemsMarkup = nodes.map((product, i) => <ProductCard key={product.id} product={product} loading={getImageLoadingPriority(i)} />);\n          return <>\r\n                <div className=\"flex items-center justify-center mt-6\">\r\n                  <PreviousLink className=\"inline-block rounded font-medium text-center py-3 px-6 border border-primary/10 bg-contrast text-primary w-full\">\r\n                    {isLoading ? 'Loading...' : 'Previous'}\r\n                  </PreviousLink>\r\n                </div>\r\n                <Grid data-test=\"product-grid\">{itemsMarkup}</Grid>\r\n                <div className=\"flex items-center justify-center mt-6\">\r\n                  <NextLink className=\"inline-block rounded font-medium text-center py-3 px-6 border border-primary/10 bg-contrast text-primary w-full\">\r\n                    {isLoading ? 'Loading...' : 'Next'}\r\n                  </NextLink>\r\n                </div>\r\n              </>;\n        }}\r\n        </Pagination>\r\n      </Section>\r\n    </>;\n}\n_s(AllProducts, \"NBH4S2xltgMZ0FE8uVN1Jwr5VLs=\", false, function () {\n  return [useLoaderData];\n});\n_c = AllProducts;\nconst ALL_PRODUCTS_QUERY = `#graphql\n  query AllProducts(\n    $country: CountryCode\n    $language: LanguageCode\n    $first: Int\n    $last: Int\n    $startCursor: String\n    $endCursor: String\n  ) @inContext(country: $country, language: $language) {\n    products(first: $first, last: $last, before: $startCursor, after: $endCursor) {\n      nodes {\n        ...ProductCard\n      }\n      pageInfo {\n        hasPreviousPage\n        hasNextPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n  ${PRODUCT_CARD_FRAGMENT}\n`;\nvar _c;\n$RefreshReg$(_c, \"AllProducts\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,iBAA2B;AAiDrB;AA5EN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qDAAuD,EAAE;AAAA,EAClG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4C;AAC5C,cAAY,IAAI,eAAe;AACjC;AAqDe,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,sFACH;AAAA,uDAAC,cAAW,SAAQ,gBAAe,SAAQ,oBAA3C;AAAA;AAAA;AAAA;AAAA,WAA4D;AAAA,IAC5D,mDAAC,WACC,6DAAC,MAAW,YAAY,UACrB,WAAC;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,MAAM;AACJ,YAAM,cAAc,MAAM,IAAI,CAAC,SAAS,MAAM,mDAAC,eAA6B,SAAkB,SAAS,wBAAwB,CAAC,KAAhE,QAAQ,IAA1B;AAAA;AAAA;AAAA;AAAA,aAAqF,CAAE;AACrI,aAAO,sFACD;AAAA,2DAAC,SAAI,WAAU,yCACb,6DAAC,gBAAa,WAAU,mHACrB,sBAAY,eAAe,cAD9B;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QACA,mDAAC,QAAK,aAAU,gBAAgB,yBAAhC;AAAA;AAAA;AAAA;AAAA,eAA4C;AAAA,QAC5C,mDAAC,SAAI,WAAU,yCACb,6DAAC,YAAS,WAAU,mHACjB,sBAAY,eAAe,UAD9B;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WAXC;AAAA;AAAA;AAAA;AAAA,aAYH;AAAA,IACN,KArBA;AAAA;AAAA;AAAA;AAAA,WAsBA,KAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,OA1BG;AAAA;AAAA;AAAA;AAAA,SA2BL;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBvB;AAAA;AAEJ,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
